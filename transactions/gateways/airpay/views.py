# Importing Python Libraries
import os
import time
from dotenv import load_dotenv
from django.conf import settings

# Importing Project Files
from .airpayPaymentGateway import AirPay

load_dotenv()

# Reading environment credentials
MERCHANT_ID = os.getenv("AIRPAY_MERCHANT_ID")
USERNAME = os.getenv("AIRPAY_USERNAME")
PASSWORD = os.getenv("AIRPAY_PASSWORD")
API_KEY = os.getenv("AIRPAY_API_KEY")

airPay = AirPay(mid=MERCHANT_ID, username=USERNAME, password=PASSWORD, apiKey=API_KEY)


"""
initiateTransactionAirPay - initiates the transaction via AirPay.

Parameters of the function:
* data (type dictionary) - holds all the data posted by client, required for transaction to initiate.
transactionDetails (required by AirPay) is then generated.

Return values of the function:
* finalResult (type dictionary) - response generated by AirPay (it will an payment portal page).
"""


def initiateTransactionAirPay(data):
    startTime = time.time()

    transactionDetails = {
        "orderId": data["referenceId"].replace("_", ""),
        "firstName": data["firstName"],
        "lastName": data["lastName"],
        "phoneNumber": data["phoneNumber"],
        "emailId": data["emailId"],
        "amount": data["amount"],
        "currencyCode": data["currencyCode"],
        "isoCurrencyCode": "INR",
    }

    # initiating the transaction.
    finalResult = airPay.initiatePaymentAPI(params=transactionDetails)

    endTime = time.time() - startTime
    # Analyzing the efficiency of the decentro
    decentroEfficiency = settings.INITITATE_TRANSACTION_AIRPAY_RESPONSE_TIME
    decentroEfficiency.observe(endTime)

    return finalResult
